services:
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://0.0.0.0:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - "9094:9094"
    networks:
      - kafka-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local-cluster
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_READONLY=false
      - KAFKA_CLUSTERS_0_TOPIC_AUTO_CREATE=true
    networks:
      - kafka-network

  payment-service:
    build:
      context: ./payment-service
      dockerfile: Dockerfile
    container_name: payment-service
    depends_on:
      - kafka
    ports:
      - "5001:5000"
    environment:
      - PORT=5000
      - KAFKAJS_NO_PARTITIONER_WARNING=1
    volumes:
      - ./payment-service:/app
      - /app/node_modules
    networks:
      - kafka-network

  analytics-service:
    build:
      context: ./analytics-service
      dockerfile: Dockerfile
    container_name: analytics-service
    depends_on:
      - kafka
    environment:
      - KAFKAJS_NO_PARTITIONER_WARNING=1
    volumes:
      - ./analytics-service:/app
      - /app/node_modules
    networks:
      - kafka-network

  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    container_name: order-service
    depends_on:
      - kafka
    environment:
      - KAFKAJS_NO_PARTITIONER_WARNING=1
    volumes:
      - ./order-service:/app
      - /app/node_modules
    networks:
      - kafka-network

  email-service:
    build:
      context: ./email-service
      dockerfile: Dockerfile
    container_name: email-service
    depends_on:
      - kafka
    environment:
      - KAFKAJS_NO_PARTITIONER_WARNING=1
    volumes:
      - ./email-service:/app
      - /app/node_modules
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge
# docker compose up --build
