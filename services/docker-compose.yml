services:
  # Single kafka cluster
  # kafka:
  #   image: bitnami/kafka:latest
  #   container_name: kafka
  #   environment:
  #     - KAFKA_CFG_NODE_ID=1
  #     - KAFKA_CFG_PROCESS_ROLES=broker,controller
  #     - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://0.0.0.0:9094
  #     - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
  #     - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
  #     - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
  #     - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
  #     - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
  #     - ALLOW_PLAINTEXT_LISTENER=yes
  #   ports:
  #     - "9094:9094"
  #   networks:
  #     - kafka-network

  # kafka-ui:
  #   image: provectuslabs/kafka-ui:latest
  #   container_name: kafka-ui
  #   depends_on:
  #     - kafka
  #   ports:
  #     - "8080:8080"
  #   environment:
  #     - KAFKA_CLUSTERS_0_NAME=local-cluster
  #     - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
  #     - KAFKA_CLUSTERS_0_READONLY=false
  #     - KAFKA_CLUSTERS_0_TOPIC_AUTO_CREATE=true
  #   networks:
  #     - kafka-network

  # payment-service:
  #   build:
  #     context: ./payment-service
  #     dockerfile: Dockerfile
  #   container_name: payment-service
  #   depends_on:
  #     - kafka
  #   ports:
  #     - "8000:8000"
  #   environment:
  #     - PORT=8000
  #     - KAFKAJS_NO_PARTITIONER_WARNING=1
  #   volumes:
  #     - ./payment-service:/app
  #     - /app/node_modules
  #   networks:
  #     - kafka-network

  # analytics-service:
  #   build:
  #     context: ./analytics-service
  #     dockerfile: Dockerfile
  #   container_name: analytics-service
  #   depends_on:
  #     - kafka
  #   environment:
  #     - KAFKAJS_NO_PARTITIONER_WARNING=1
  #   volumes:
  #     - ./analytics-service:/app
  #     - /app/node_modules
  #   networks:
  #     - kafka-network

  # order-service:
  #   build:
  #     context: ./order-service
  #     dockerfile: Dockerfile
  #   container_name: order-service
  #   depends_on:
  #     - kafka
  #   environment:
  #     - KAFKAJS_NO_PARTITIONER_WARNING=1
  #   volumes:
  #     - ./order-service:/app
  #     - /app/node_modules
  #   networks:
  #     - kafka-network

  # email-service:
  #   build:
  #     context: ./email-service
  #     dockerfile: Dockerfile
  #   container_name: email-service
  #   depends_on:
  #     - kafka
  #   environment:
  #     - KAFKAJS_NO_PARTITIONER_WARNING=1
  #   volumes:
  #     - ./email-service:/app
  #     - /app/node_modules
  #   networks:
  #     - kafka-network

  # Multiple kafka cluster
  kafka-broker-1:
    image: bitnami/kafka:latest
    container_name: kafka-broker-1
    environment:
      KAFKA_ENABLE_KRAFT: "yes"
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://0.0.0.0:9094
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-1:9092,EXTERNAL://localhost:9094
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka-broker-1:9093,2@kafka-broker-2:9093,3@kafka-broker-3:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_KRAFT_CLUSTER_ID: 7Dvn0OLMQo-bg4qmCmflVg
      ALLOW_PLAINTEXT_LISTENER: yes
    ports:
      - "9094:9094"
    networks:
      - kafka-network

  kafka-broker-2:
    image: bitnami/kafka:latest
    container_name: kafka-broker-2
    environment:
      KAFKA_ENABLE_KRAFT: "yes"
      KAFKA_CFG_NODE_ID: 2
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://0.0.0.0:9095
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-2:9092,EXTERNAL://localhost:9095
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka-broker-1:9093,2@kafka-broker-2:9093,3@kafka-broker-3:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_KRAFT_CLUSTER_ID: 7Dvn0OLMQo-bg4qmCmflVg
      ALLOW_PLAINTEXT_LISTENER: yes
    ports:
      - "9095:9095"
    networks:
      - kafka-network

  kafka-broker-3:
    image: bitnami/kafka:latest
    container_name: kafka-broker-3
    environment:
      KAFKA_ENABLE_KRAFT: "yes"
      KAFKA_CFG_NODE_ID: 3
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://0.0.0.0:9096
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-3:9092,EXTERNAL://localhost:9096
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka-broker-1:9093,2@kafka-broker-2:9093,3@kafka-broker-3:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_KRAFT_CLUSTER_ID: 7Dvn0OLMQo-bg4qmCmflVg
      ALLOW_PLAINTEXT_LISTENER: yes
    ports:
      - "9096:9096"
    networks:
      - kafka-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-broker-1:9092,kafka-broker-2:9092,kafka-broker-3:9092
      KAFKA_CLUSTERS_0_READONLY: false
      KAFKA_CLUSTERS_0_TOPIC_AUTO_CREATE: true
    networks:
      - kafka-network

  payment-service:
    build:
      context: ./payment-service
      dockerfile: Dockerfile
    container_name: payment-service
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
    ports:
      - "8000:8000"
    environment:
      PORT: 8000
      KAFKAJS_NO_PARTITIONER_WARNING: 1
    volumes:
      - ./payment-service:/app
      - /app/node_modules
    networks:
      - kafka-network

  analytics-service:
    build:
      context: ./analytics-service
      dockerfile: Dockerfile
    container_name: analytics-service
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
    environment:
      KAFKAJS_NO_PARTITIONER_WARNING: 1
    volumes:
      - ./analytics-service:/app
      - /app/node_modules
    networks:
      - kafka-network

  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    container_name: order-service
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
    environment:
      KAFKAJS_NO_PARTITIONER_WARNING: 1
    volumes:
      - ./order-service:/app
      - /app/node_modules
    networks:
      - kafka-network

  email-service:
    build:
      context: ./email-service
      dockerfile: Dockerfile
    container_name: email-service
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
    environment:
      KAFKAJS_NO_PARTITIONER_WARNING: 1
    volumes:
      - ./email-service:/app
      - /app/node_modules
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge
# docker compose up --build
